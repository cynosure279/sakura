import QtQuick 2.15
import QtQuick.Controls
import QtQuick.Layouts
import FluentUI
import "../global"

FluPage{
    launchMode: FluPageType.SingleTask



    anchors.fill: parent
    RowLayout{


        height:parent.height
        width: parent.width

        Projects{}


        ColumnLayout{


            Layout.fillHeight: true
            Layout.fillWidth: true



            FluAutoSuggestBox{

                height: 30
                Layout.alignment: Qt.AlignHCenter



                property int num: 600
                iconSource: FluentIcons.Search
                placeholderText: "Search in "+ num +" plugins"
            }





            GridView{

                id:grid
                cellHeight: 180
                cellWidth: 260
                Layout.fillWidth: true
                Layout.fillHeight: true
                Layout.margins: 10
                clip: true






                ListModel{
                    id:testM
                    ListElement{
                        pTitle:"0"
                        pDesc:"desc0"
                        pAuthor:"me"
                        
                    }
                    
                    ListElement{
                        txt:"2"
                    }
                    ListElement{
                        txt:"3"
                    }
                    ListElement{
                        txt:"4"
                    }
                    ListElement{
                        txt:"5"
                    }
                    ListElement{
                        txt:"6"
                    }

                }

                Component{
                    id:testD

                    Item {

                        width:grid.cellWidth-5
                        height:grid.cellHeight-5

                        FluFrame{

                            width:parent.width
                            height:parent.height
                            radius: 8
                            Rectangle{
                                radius: 8
                                color: {
                                    if(mouse.containsMouse){
                                        return FluTheme.itemHoverColor
                                    }
                                    return FluTheme.itemNormalColor
                                }
                            }


                            FluText{
                                text: pTitle
                                anchors.fill: parent
                                anchors.leftMargin: 15
                                anchors.topMargin: 15
                                font: FluTextStyle.Title

                            }

                            MouseArea{

                                anchors.fill: parent
                                id:mouse
                                hoverEnabled: true
                                onClicked: {}
                            }








                        }

                    }
                }


                model: testM
                delegate: testD
                width:parent.width
                focus: true

            }






        }




    }

}



